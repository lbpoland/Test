# Total Tokens: 25483
# Total Files Merged: 16
# Total Characters: 84989

IE/combat_room3.c
==================================================

#include "path.h"
#define MAX 100;
inherit PATH + "inside";
string *arr0;
object sign, dummy, trainer;
void setup() {
  set_short("John's Boot Camp");
  add_property("determinate", "");
  set_light( 75 );
  add_property("no teleport", 1);
  set_long("This is a small training room, designed to help the new "
           "adventurer get off to a good start on Discworld.  The air is "
           "stale with the combined stench of sweat, beer, and old "
           "warriors.  Off to one side is a rather unusual training "
           "dummy above which is a small plaque.\n");
  add_item( "face", "As you stare at it, squinting and turning your head "
            "side to side, you realise it looks rather like your old maths "
            "teacher!\n");
  add_item( "floor", "The floor is made of flagstones, cemented together "
            "with centuries of accumulated muck.\n");
  add_item( "wall", "The walls are marked with mysterious stains that may or "
            "may not be blood.  But surely training dummies don't bleed.\n");
  add_item( "ceiling", "The ceiling appears to be dingy patches of plaster "
            "stuck between old oak rafters that have turned black with "
            "age.\n");
  add_property("no godmother", 1);
  add_exit( "combat", PATH + "combat", "door" );
  add_alias( "southeast", "foyer");
}
void reset() {
  if(!sign) {
    sign=add_sign("This is a plaque that seems to describe how to have "
                   "your combat skills assessed.\n", "To assess your "
                   "skills, attack the dummy with the weapon you want to "
                   "test your proficiency in.  Each time you hit the "
                   "dummy, the instructor will comment on your "
                   "performance.  After a number of rounds, the "
                   "instructor will stop you and give you an overall "
                   "performance rating.\n\n"
                   "Don't forget to hold your weapon of choice before "
                   "attacking the training dummy!\n",
                   "small plaque", "plaque", "general");
    sign->add_property("there", "on the wall");
  }
  if(!dummy)
    dummy = clone_object(PATH + "dummy");
  dummy->move(this_object());
  call_out("get_trainer", 1);
}
void dest_me() {
  if(sign)
    sign->dest_me();
  if(dummy)
    dummy->dest_me();
  if(trainer)
    trainer->dest_me();
  ::dest_me();
}
void get_trainer() {
  if(!trainer)
    trainer = clone_object(PATH +"trainer");
  if (trainer) {
    trainer->whichone("john");
    trainer->move( this_object(), "$N hobble$s toward you on his straw-filled stumps." );
    dummy->set_trainer(trainer);
  }
}
void stop_them(object who) {
  if(trainer && dummy)
    trainer->stop_them(who, dummy);
}
string query_quit_handler() {
  return "/d/liaison/NEWBIE/combat";
}

==================================================
FILE: liaison/NEWBIE/common.c
==================================================

void dest_money(object coins) {
  if(coins->query_number_coins() > 1)
    tell_room(this_object(), "As the coins hit the ground they "
              "slip between the cracks and disappear.\n");
  else
    tell_room(this_object(), "As the coin hits the ground it "
              "slips between the cracks and disappears.\n");
  coins->move("/room/rubbish");
}
#ifdef 0
void event_enter(object ob, string mess, object from) {
  if(base_name(ob) == "/obj/money") {
    call_out("dest_money", 0, ob);
  }
  return;
}
#endif

==================================================
FILE: liaison/NEWBIE/communication.c
==================================================

#include "path.h"
inherit PATH + "inside";
object sign;
void setup() {
  set_zone( "Newbie" );
  set_short( "Communication room" );
  set_light( 75 );
  add_property("no teleport", 1);
  set_long("This small room seems to be filled with frogs which are bouncing "
           "around, wombling on and chattering away like crazy.  Around the "
           "walls are a number of posters that describe various aspects of "
           "communication on Discworld.  There are posters on 'general', "
           "'speaking', 'expression', 'emote', 'newbie' and "
           "'mail'.\n");
  add_item("frog", "There are small green frogs everywhere.  They seem very "
           "excited and are moshing, sniggering, hugging,... you name it, "
           "they are doing it.");
  add_item("poster", "There are several of these around the room.  To look "
           "at a particular poster type 'look' and the name of the "
           "poster.");
  add_item("wall", "It is hard to make out much of the walls behind the "
           "posters, but what you can see is painted a subtle sunflower "
           "yellow.");
  add_item("floor", "The floor is composed of stone slabs and covered "
           "with frogs.");
  sign=add_sign("A poster entitled 'What Do You Mean?'\n",
           "If you are new to online communication you may be surprised how "
           "easy it is to misunderstand and to be misunderstood when you "
           "only have typed words to go on.  So please take care in how you "
           "word things and also be prepared to seek clarification before "
           "getting upset with someone, they may not have meant it how you "
           "read it!", 0, "general", "general");
  sign->set_short("sign marked 'general'");
  sign->add_property("determinate","the ");
  sign=add_sign("A poster entitled 'It's Good To Talk'\n",
           "There are a number of ways to communicate verbally.\n"
           "To speak to everyone in the same room as yourself use the "
           "command 'say', 'lsay' (loud say).  To speak to an individual "
           "you may use 'whisper' if they are in the same room, or "
           "'tell' if they are elsewhere on the disc.  You may also "
           "'shout' which will be heard by everyone who is nearby, however "
           "shouting uses up social points which will regenerate slowly.\n",
           0, "speaking", "general");
  sign->set_short("sign marked 'speaking'");
  sign->add_property("determinate","the ");
  sign=add_sign("A poster entitled 'Womble On'\n",
           "Discworld also has a soul which allows you some emotional "
           "expression, thus you can 'laugh' or 'cry'.  There are "
           "approximately 550 soul commands so they are not listed here.  "
           "Use 'help soul' and 'look soul' to find out more about "
           "them.\n", 0, "expression", "general");
  sign->set_short("sign marked 'expression'");
  sign->add_property("determinate","the ");
  sign=add_sign("A poster entitled 'Laugh In An Old Fashioned Way'\n",
           "Emote allows free expression.  If Jim used 'emote jumps around "
           "in a slightly artistic manner' everyone in the room would see "
           "him do just that.  Initially you will not be able to emote, you "
           "must learn that skill.", 0, "emote", "general");
  sign->set_short("sign marked 'emote'");
  sign->add_property("determinate","the ");
  sign=add_sign("A poster entitled 'What Do You Mean?'\n",
           "For the first day of your time on Discworld you will have access "
           "to the newbie chat channel which is listened to by most creators "
           "and many of the players.  You may use this channel to ask for "
           "help and advice.  To use the channel type 'newbie <message>'"
           ", and to see the last few messages type 'hnewbie'.\n",
           0, "newbie", "general");
  sign->set_short("sign marked 'newbie'");
  sign->add_property("determinate","the ");
  sign=add_sign("A poster entitled 'But You're Not There'\n",
           "Discworld provides a mail system which allows you to send "
           "messages to players who are not currently logged in.  You must "
           "go to the post office to read or send mail.\n"
           "There are also a number of bulletin boards around the place on "
           "which people can place public messages.  The frog board is in "
           "the Mended Drum and the newspaper board is in the offices of "
           "the Ankh-Morpork Daily Times.  Your guild will also have a "
           "board located somewhere in the guildhouse.\n", 0, "mail", "general");
  sign->set_short("sign marked 'mail'");
  sign->add_property("determinate","the ");
  add_property("no godmother", 1);
  room_chat(({120, 240, ({"A small frog bumps into you, apologises "
                            "profusely, and hops off.",
                            "A frog leaps up and down excitedly.",
                            "A frog wombles around you happily.",
                            "A frog bingles happily.",
                            "A frog parps wryly at you."})}));
  add_exit( "foyer", PATH + "foyer", "door" );
  add_alias( "west", "foyer" );
}

==================================================
FILE: liaison/NEWBIE/dummy.c
==================================================

inherit "/obj/monster";
#include <armoury.h>
#include <weapon.h>
#include <tasks.h>
#include <combat.h>
int told_attack, told_parry, ability;
string *misc;
object trainer, trainee;
#define DODGE "fighting.combat.dodging.melee"
#define PARRY "fighting.combat.parry.melee"
#define PERSON_DODGE_FAILURE "As the dummy spins around, an arm swings towards you and hits you before you can dodge out of the way!\n"
#define ROOM_DODGE_FAILURE " isn't fast enough to dodge a spinning arm!  Ouch!\n"
#define PERSON_DODGE_SUCESS "As the dummy spins around, an arm swings towards you but you see it in time and dodge it.\n"
#define ROOM_DODGE_SUCESS " dodges the arm of the wooden training dummy.\n"
#define PERSON_PARRY_FAILURE "As the dummy spins around, an arm swings towards you but you are unable to block it!\n"
#define ROOM_PARRY_FAILURE " isn't fast enough to avoid the training dummy! Ouch!\n"
#define PERSON_PARRY_SUCCESS "As the dummy spins around, an arm swings towards you but you see it in time and block it.\n"
#define ROOM_PARRY_SUCCESS " parries the training dummy.\n"
#define MISC_MESSAGES ({ "Generally, heavier weapons are harder to attack and "\
  "parry with but their attacks are harder to parry.", \
  "Being burdened in combat, by carrying lots of things or wearing lots of " \
  "armour, reduces your effectiveness.  This is especially true for dodging.", \
  "When injured it is harder to fight, so watch your health closely.", \
  "Holding a two-handed weapon in one hand can be useful when using a shield "\
  "but is hard to do unless you have high strength.", \
  "You can focus on specific parts of your opponents body to take advantage " \
  "of weaknesses in their armour but this is harder to do than attacking " \
  "normally."})
#define DIFF 15
#define MOD 10
int assault_dummy();
mixed *callback(int stage, class attack att, mixed data);
void failed_defense( object );
void failed_attack( object );
void tell_misc( object );
void spin_arm( object, object );
object query_trainer() {
  return trainer;
}
object reset_trainer() {
  trainer = 0;
}
object set_trainer( object thing ) {
  return trainer = thing;
}
object query_trainee() {
  return trainee;
}
object reset_trainee() {
  trainee = 0;
}
object set_trainee( object thing ) {
  return trainee = thing;
}
int query_skill_bonus( string words ) {
  return 10;
}
void setup() {
  set_name( "dummy" );
  add_adjective( ({ "wood", "wooden", "training" }) );
  set_short( "training dummy" );
  set_long( "A fighters dummy.  It is looking pretty worn from having "+
    "all the stuffing knocked out of it all day.\n");
  basic_setup( "human", "warrior", 10 );
  set_gender( 0 );
  add_property( "run away", -1 );
  set_dex(6);
  set_str(6);
  set_con(18);
  set_int(6);
  set_wis(6);
  remove_ac( "sharp" );
  remove_ac( "pierce" );
  remove_ac( "blunt" );
  remove_ac( "unarmed" );
  add_skill_level( "other.health", 1000 );
  add_combat_action( 100, "spin_arm", (: spin_arm :) );
  ARMOURY->request_item( "dirty rags", 30 )->move( this_object() );
}
int attack_this_time() {
  return 0;
}
void init() {
  if( this_player() ) {
    this_player()->add_command( "kill", this_object(), "{dummy}",
      (: assault_dummy() :) );
    this_player()->add_command( "attack", this_object(), "{dummy}",
      (: assault_dummy() :) );
  }
}
int assault_dummy() {
  object *weapons, weapon;
  int i;
  if( trainer->query_fighting() ) {
    write( "You beat at and tear up " + this_object()->the_short() +
      " for a while until you get bored.\n" );
    say( this_player()->query_short() + " hacks at " +
      this_object()->the_short() + " for a while.\n", this_player() );
  }
  if( trainee && !interactive( trainee ) )
    reset_trainee();
  if( trainee ) {
    if( trainee->query_fighting() ) {
      if( trainee == this_player() ) {
        tell_object( this_player(), "You are already using " +
          this_object()->the_short() + ".\n" );
        return notify_fail( "" );
      }
      tell_object( this_player(), trainee->one_short() + " is currently "
        "using " + this_object()->the_short() + ".\n" );
      return notify_fail( "" );
    }
  }
  weapon = 0;
  ability = 0;
  told_attack = 0;
  told_parry = 0;
  misc = copy(MISC_MESSAGES);
  weapons = (object *)this_player()->query_weapons();
  if( sizeof( weapons ) > 1 ) {
    trainer->stop_them( previous_object(), this_object() );
    trainer->do_command( "say Just use one weapon, I get confused if you use "
      "more than one!" );
    return 1;
  }
  if( sizeof( weapons ) && !weapon )
    weapon = weapons[ 0 ];
  this_player()->attack_ob( this_object() );
  write( "You attack " + this_object()->the_short() + ".\n" );
  say( this_player()->the_short() + " attacks " + this_object()->a_short() +
    ".\n", this_player() );
  trainee = this_player();
  for( i = 0; i < sizeof( ( class combat_special )this_object()->
    query_specials() ); i++ ) {
      this_object()->remove_special( ( class combat_special )this_object()->
        query_specials()[i]->id );
  }
  this_object()->register_special( T_DEFENSIVE,
                                   E_AFTER_ATTACK,
                                   ({ this_object(), "callback" }),
                                   ({ 0, 0, weapon }) );
  return 1;
}
int attack_by(object ob) {
  if(!sizeof(query_specials()))
    call_out("attack_dummy", 0);
  return ::attack_by(ob);
}
mixed *callback( int stage, class attack att, mixed data ) {
  int *rating, number, damage, last_damage;
  object dumdum, newbie, *weapons, weapon;
  string what, skill;
  mixed *attacks;
  newbie = att->attacker;
  dumdum = att->opponent;
  weapons = (object *)this_player()->query_weapons();
  if( sizeof( weapons ) > 1 ) {
    trainer->stop_them( newbie, dumdum );
    trainer->do_command( "say Just use one weapon, I get confused if you use "
      "more than one!" );
    debug_printf( "More than one weapon, removing special.\n" );
    return({ R_CONTINUE | R_REMOVE_ME, att, data });
  }
  if( sizeof( weapons ) && !weapon )
    weapon = weapons[ 0 ];
  if( weapon != data[2] ) {
    trainer->stop_them( newbie, dumdum );
    trainer->do_command( "say You've changed weapons!" );
    debug_printf( "Changed weapons, removing special.\n" );
    return({ R_CONTINUE | R_REMOVE_ME, att, data });
  }
  last_damage = data[1];
  damage = att->damage;
  data[1] = damage;
  if( !last_damage) {
    failed_attack(newbie);
  }
  if(last_damage || !random(4)) {
    if( weapon ) {
      attacks = weapon->query_attack_data();
      skill = attacks[random( sizeof( attacks ) / W_ARRAY_SIZE ) *
        W_ARRAY_SIZE + W_SKILL];
    } else {
      skill = "unarmed";
    }
    if( newbie->query_skill( "fighting.combat.melee." + skill ) < 5 &&
       !random( 4 * ( newbie->query_skill( "fighting.combat.melee." +
       skill ) ) ) &&
       newbie->add_skill_level( "fighting.combat.melee." + skill, 1, 1 ) ) {
      if( skill == "unarmed" )
         tell_object( newbie, "%^YELLOW%^You feel you've learned something "
          "about unarmed combat.%^RESET%^\n" );
       tell_object( newbie, "%^YELLOW%^You feel you've learned something about "
         "using " + weapon->a_short() + ".%^RESET%^\n" );
    }
  }
  if( data[0]++ > 15 ) {
    number = ( 2 * (ability + data[0]) ) / ( 2 * data[0] );
    if( weapon )
      what = convert_message( ( string )weapon->the_short() );
    else
      what = "whatever it was you were using";
    trainer->stop_them( newbie, dumdum );
    trainer->do_command( "think" );
    switch ( number ) {
    case 0..1 :
      if( skill == "unarmed" )
        trainer->do_command( "say Well, you're rather hopeless." );
      else {
        if( strsrch( what, "knife" ) == -1 && strsrch( what, "dagger" ) == -1)
          trainer->do_command( "say Well, you're rather hopeless with " + what +
            ", really.  A lighter, simpler weapon may help." );
        else
          trainer->do_command( "say Well, you're rather hopeless with " + what +
            ", really, but with practice you'll get better.");
      }
      break;
    case 2 .. 3 :
      if( skill == "unarmed" )
        trainer->do_command( "say Hmmm... You have some skill." );
      trainer->do_command( "say Hmmm... You have some skill with " + what +
        ", at any rate, as you practice you'll get better." );
      break;
    case 4 .. 5 :
      if( skill == "unarmed" )
        trainer->do_command( "say You're getting there.  Keep training and "
          "you'll be pretty good soon." );
      trainer->do_command( "say You're getting there.  Keep training with " +
        what + " and you'll be pretty good with it soon." );
      break;
    default :
      if( skill == "unarmed" )
        trainer->do_command( "say I'd say you've more or less mastered unarmed "
          "combat.  Well done!" );
      trainer->do_command( "say I'd say you've more or less mastered " + what +
        ".  Well done!" );
    }
    trainee = 0;
    return({ R_CONTINUE | R_REMOVE_ME, att, data });
  }
  tell_misc(newbie);
  if( !damage) {
    return ({ R_CONTINUE, att, data });
  }
  if( skill == "unarmed" ) {
    rating = (int *)"/cmds/guild-race/other/judge"->calc_rating( newbie );
  } else {
    rating = (int *)"/cmds/guild-race/other/judge"->calc_rating( weapon );
  }
  if( !rating[0] )
    rating [0] = random( 10 ) + 30;
  if( !rating[1] )
    rating [1] = random( 80 ) + 60;
  number = ( ( 40 * damage ) / rating[ 0 ] +
             ( 20 * damage ) / rating[ 1 ] ) / 5;
  debug_printf("%d", number);
  ability += number;
  if (number > 14)
    number = 14;
  trainer->do_command( "say That's " + ({ "an atrocious", "an extremely poor",
    "a very poor", "a rather poor", "a poor", "a pretty poor", "quite a poor",
    "a reasonable", "quite a good", "a pretty good", "a good", "a rather "
    "good", "a very good", "an extremely good", "an excellent" })
    [ number ] + " attack." );
  return ({ R_CONTINUE, att, data });
}
void spin_arm( object newbie, object dumdum ) {
  int diff, which, failed;
  if( environment( newbie ) != environment( this_object() ) )
     return;
  switch( ( ( class tactics )newbie->query_tactics() )->attitude ) {
  case "offensive":
    diff = DIFF + MOD;
    break;
  case "defensive":
    diff = DIFF - MOD;
    break;
  default:
    diff = DIFF;
  }
  switch( newbie->query_combat_response() ) {
  case "dodge" :
    which = 1;
    break;
  case "parry":
    which = 0;
    break;
  default:
    which = random( 2 );
  }
  if( which ) {
    switch( TASKER->perform_task( newbie, DODGE, diff, TM_FIXED ) ) {
      case FAIL :
        if( newbie->query_skill( DODGE ) >= 5 ||
           random( 3 * ( newbie->query_skill( DODGE ) ) ) ||
           !newbie->add_skill_level( DODGE, 1, 1 ) ) {
          tell_object( newbie, PERSON_DODGE_FAILURE );
          tell_room( environment( newbie ),newbie->one_short() +
            ROOM_DODGE_FAILURE, ({ newbie }) );
          failed = 1;
          break;
        }
      case AWARD :
        tell_object( newbie, "%^YELLOW%^You feel better at dodging "
          "things.%^RESET%^\n" );
      case SUCCEED :
        tell_object( newbie,PERSON_DODGE_SUCESS );
        tell_room( environment( newbie ), newbie->one_short() +
          ROOM_DODGE_SUCESS, ({ newbie }) );
        break;
    }
  } else {
    switch( TASKER->perform_task( newbie, PARRY, diff, TM_FIXED ) ) {
      case FAIL :
        if( newbie->query_skill( PARRY ) >= 5 ||
           random( 3 * ( newbie->query_skill( PARRY ) ) ) ||
           !newbie->add_skill_level( PARRY, 1, 1 ) ) {
          tell_object( newbie, PERSON_PARRY_FAILURE );
          tell_room( environment( newbie ), newbie->one_short() +
            ROOM_PARRY_FAILURE, ({ newbie }) );
          failed = 1;
          break;
        }
      case AWARD :
        tell_object( newbie, "%^YELLOW%^You feel better at parrying things."
          "%^RESET%^\n" );
      case SUCCEED :
        tell_object( newbie, PERSON_PARRY_SUCCESS );
        tell_room( environment( newbie ), newbie->one_short() +
          ROOM_PARRY_SUCCESS, ({ newbie }) );
        break;
    }
  }
  if( trainer && failed )
    failed_defense(newbie);
  return;
}
void tell_misc(object newbie) {
  int which;
  if(!sizeof(misc) || random(5))
    return;
  which = random(sizeof(misc));
  trainer->do_command("say " + misc[which]);
  misc -= ({ misc[which] });
}
void failed_attack( object newbie ) {
  string attitude;
  if(told_attack)
    return;
  attitude = (newbie->query_tactics())->attitude;
  if(attitude != "offensive" && attitude != "insane") {
    told_attack = 1;
    trainer->do_command( "say You can improve your chances of hitting your "
                         "opponent by setting your tactics to a more "
                         "offensive attitude.");
  }
}
void failed_defense( object newbie ) {
  string attitude;
  if(told_parry)
    return;
  attitude = (newbie->query_tactics())->attitude;
  if(attitude != "defensive" && attitude != "wimp") {
    told_parry = 1;
    trainer->do_command( "say You can improve your chances of defending by "
                         "setting your tactics to a more defensive "
                         "attitude." );
  }
}
void adjust_hp() {
  return this_object()->query_max_hp();
}

==================================================
FILE: liaison/NEWBIE/fighters.c
==================================================

#include "path.h"
inherit PATH + "inside";
void setup() {
   set_short( "Warriors' gazebo" );
   set_light( 75 );
   add_property("no teleport", 1);
   set_long( "As you enter this gazebo, you are overwhelmed with a smell of "
             "decaying limbs and dried blood.  A sign catches your eye and you "
             "notice it's the only non-blood covered item in the room.  Maybe "
             "if you 'read sign' you'll get some information about this "
             "deadly guild.\n"
             "A small notice pinned to the wall with a sword states that this "
             "is not the place where you actually join the guild.  The rest "
             "of the note is too torn to read.\n" );
   set_zone( "Newbie" );
   add_item( ({ "armour" }),
             "There are many items around the room, but their function is "
             "beyond you for the most part." );
   add_item( ({ "notice" }),
             "This notice was probably pinned to the wall during combat "
             "practice, and is therefore more or less unreadable after the "
             "battering it got during the session.\n" );
   add_sign( "This sign seems to cower in the corner of the room "
             "unsure of it's place here.\n", "In this deadly guild, "
             "the fine art of killing and berserking is taught.  Learn how "
             "to be deadly with accuracy and lots of pain!  To be a warrior "
             "you must endure lots of pain, practice as much as you can, have "
             "a strong stomach, and have the ability to kill without batting "
             "an eye.  Remember to always keep your guild motto with you: 'If "
             "It Moves Kill It.  If It Doesn't Move, Wait For It To Move, "
             "Then Kill It.'", 0, 0, "general" );
   add_property("no godmother", 1);
   add_exit( "garden", PATH +"guilds_foyer", "gate" );
}

==================================================
FILE: liaison/NEWBIE/foyer.c
==================================================

#include "path.h"
#include <library.h>
#include <config.h>
inherit PATH+"inside";
object womble;
string format_sign(string message);
void setup() {
  add_property("no teleport", 1);
  set_zone( "Newbie" );
  set_short( "Discworld foyer" );
  set_light( 75 );
  set_long("This is a cavernous, circular room that echoes the shape of "
           "the Discworld itself.  At its centre is a large round table upon "
           "which is what appears to be a map of Discworld, complete with "
           "Great A'Tuin swimming slowly through space carrying Berilia, "
           "Tubul, Great T'Phon and Jerakeen, the four giant elephants upon "
           "whose shoulders the disc of the world rests.  The walls are "
           "decorated with murals showing scenes from the disc.  Dark doorways "
           "ring the perimeter of the room, leading away in all directions.\n"
           "There is a large white sign on one wall labelled 'Discworld'.  "
           "You may 'look' at a sign or 'read' a sign.\n");
  add_item(({ "map", "disc", "Disc" }), "Upon closer examination you are not "
           "quite so certain that this is just a map of the Disc.  "
           "The detail is incredible, from the sharp spire of Cori "
           "Celesti at the centre, to the surrounding Circle Sea, "
           "the deserts of Klatch, the watery world of Krull, and the "
           "mysterious Counterweight Continent.  A spectacular rimbow "
           "sparkles where the seas pour over the edge of the Disc.  As "
           "you study the map's details, you are sure you saw one of the "
           "elephants move.");
  add_item("rimbow", "It's like a rainbow except that it's caused by the "
           "water pouring off the edge of the disc.");
  add_item("elephant", "These are the four elephants that bear the weight"
           " of the Disc.");
  add_item( "table", "The table is made of a single piece of green granite, "
           "heavily carved with small figures.  The top of the table is "
           "mostly covered by the map of Discworld, although you can see "
           "a few squares of black and white marble underneath, rather "
           "like a chessboard.");
  add_item(({ "figure", "carving" }), "The tiny, carved figures are "
           "extremely detailed.  You can make out what appears to be "
           "some trolls, a handful of dwarfs, three witches, and what "
           "surely must be the ugliest cat ever.  Looking at the cat "
           "carving, you are sure you catch a whiff of something vile, "
           "much like fermented carpets.");
  add_item("floor", "The floor is made of polished marble so smooth that "
           "you can see your face in it - yeuch!");
  add_item("wall", "The walls are covered in murals showing scenes from "
           "the disc.");
  add_item( "ceiling", "The ceiling, if there is one, disappears into the "
           "lofty gloom overhead.");
  add_item(({ "doorway", "door" }), "The doorways are dark, yet somehow "
           "inviting.  Or at least not threatening.");
  add_item("mural", "On one wall there is a painting of a seedy looking inn "
           "with a sign of a drum hanging outside.  On another a small castle "
           "set high in a mountainous region where the peaks are snow-"
           "capped.  You can almost feel the biting wind.  On another an "
           "oasis in an otherwise hot, dry desert.  The final one is the "
           "most peculiar being a strange bone covered landscape with a "
           "massive sphinx in the centre.");
   add_sign("This is a simple white sign marked \"Discworld\".\n",
            format_sign("This mud is based on the books written by Terry "
                        "Pratchett.  While it is not necessary to have read "
                        "the Discworld books you may find it helpful for some "
                        "of the quests and in knowing more about the "
                        "characters and places in the game."),
            0, ({ "sign","discworld","Discworld" }), "general" )->add_property(
            "determinate","the ");
   room_chat(({60, 120, ({"There is a sound like the rattle and fall of a "
                         "pair of dice.",
                         "You hear a hushed chuckle far above your head.",
                         "A pleasant voice says: Another game?"
                         })}));
   add_exit("helpme", PATH+"help", "door");
   add_exit("communication", PATH +"communication", "door");
   add_exit("hints", PATH +"hints", "door");
   add_exit("guilds", PATH+"guilds_foyer", "door");
   add_exit("commerce", PATH+"shop", "door");
   add_exit("align", PATH+"align", "door");
   add_exit("advancement", PATH+"advancement", "door");
   add_exit("combat", PATH+"combat","door");
  add_property("no godmother", 1);
   add_exit("out", PATH + "choose_land", "path" );
   modify_exit( "out", ({ "function", "check_allow" }) );
}
int check_allow( string str, object ob, string special_mess ) {
  if(ob->query_property("womble's brooch")) {
    ob->set_language("general");
    return 1;
  }
  tell_object( ob,
               "You haven't completed the womble's quest yet.\n"
               "Complete that quest and you can enter the game.\n"
               "HINT: Find the womble's brooch and give it to her.\n");
  return notify_fail( "" );
}
void init() {
   ::init();
   womble = find_object( PATH +"womble" );
   if ( !womble || !environment( womble ) )
      ( PATH +"womble" )->move( this_object(), "$N womble$s in." );
}
string format_sign(string message) {
  int i;
  string *bits;
  string ret = "", bit;
  bits = explode(sprintf("%-="+(SIGN_WIDTH-2)+"s", message), "\n");
  ret += "\n     _";
  for(i=0; i<SIGN_WIDTH - 1; i++)
    ret += "_";
  ret += "\n";
  ret +="
  for(i=0; i<SIGN_WIDTH; i++)
    ret += " ";
  ret += "\\\n";
  foreach(bit in bits) {
    ret += "   || " + bit;
    for(i=sizeof(bit); i<SIGN_WIDTH-1; i++)
      ret += " ";
    ret += "|\n";
  }
  ret += "   \\\\";
  for(i=0; i<SIGN_WIDTH; i++)
    ret += "_";
  ret += "/\n";
  return ret;
}

==================================================
FILE: liaison/NEWBIE/greg.c
==================================================

#include "path.h"
#include <armoury.h>
inherit "/obj/monster";
#define THROW_OUT 300
#define RPATHS ({ PATH + "combat_room1", PATH + "combat_room2", PATH + "combat_room3"})
#define RNAMES ({ "one", "two", "three" })
object *queue = ({ });
object *offered = ({ });
object *in_use = ({ 0, 0, 0 });
object combat_room;
mapping callouts;
void setup() {
  add_property("determinate", "");
  set_name( "greg" );
  set_short("Greg" );
  set_main_plural("Gregs" );
  set_race( "human" );
  set_response_mon_understand_anything(1);
  set_gender( 1 );
  set_al(-500 );
  set_class( "fighter" );
  set_language( "general" );
  set_level( 100 + random( 100 ) );
  set_long( "This is Greg the combat instructor.  He looks pretty mean, but "
            "don't let appearances deceive you, he's a softy at heart.\n" );
  adjust_money( 10 + random( 40 ), "Ankh-Morpork pence" );
  load_chat( 25, ({
    1, ":grunts.",
      1, "'Ug.",
      1, "'I am great.",
      1, "@flex",
      1, "'Look at my cool muscles.",
      }) );
  add_respond_to_with(({ "yes" }), ({ "#yes" }));
  add_respond_to_with(({ "no" }), ({ "#no" }));
  add_respond_to_with(({ ({ "can", "may" }),
                         ({ "practise", "practice", "train"}),
                         ({ "please" }) }),
                      ({ "#request" }) );
  add_respond_to_with(({ ({ "hello", "hi", "gday", }),
                           ({ "womble", "all" }) }), ({ "'Hello $hcname$",
                                                          "bow ? $hname$" }));
  add_respond_to_with(({ "fuck", ({ "off", "you" }) }), ({ "'Same to you!",
                                                             "skick $hname$"
                                                             }));
  add_respond_to_with(({ "fuck" }), "waggle $hname$");
  add_respond_to_with(
                      ({ "@smile", "womble" }), "smile $hname$");
  add_respond_to_with(
     ({ ({ "@skick", "@spunch", "@jump", "@pat", "@slap" }),
          "womble" }), "glare $hname$");
  add_respond_to_with(
                      ({ ({ "@poke", "@glare", "@point" }),
                           "womble" }), "peer sus at $hname$");
  add_respond_to_with(
                      ({ "@grin", "womble" }), "grin $hname$");
  add_respond_to_with(
                ({ ({ "@caress", "@snuggle", "@nestle", "@love", "@throw" }),
                     "womble" }), "waggle $hname$");
  add_respond_to_with(
                      ({ ({ "@kiss", "@french", }),
                           "womble" }), "slap $hname$");
  add_respond_to_with(({ ({ "@bing", "@womble", }),
                           "womble" }), "smile bri $hname$");
  add_skill_level( "other.health", 50 + random( 50 ) );
  (ARMOURY->request_weapon("long sword", 75))->move(this_object());
  (ARMOURY->request_armour("ringmail", 80))->move(this_object());
  (ARMOURY->request_armour("metal clad boots", 80))->move(this_object());
  (ARMOURY->request_armour("metal gauntlets", 80))->move(this_object());
  init_equip();
  callouts = ([ ]);
}
void event_enter(object ob, string message, object from) {
  if(environment() == find_object("/room/rubbish")) {
    return ::event_enter(ob, message, from);
  }
  if(ob->query_property("dead")) {
    return ::event_enter(ob, message, from);
  }
  if(!ob->query_visible(this_object())) {
    return ::event_enter(ob, message, from);
  }
  if(!userp(ob)) {
    return ::event_enter(ob, message, from);
  }
  if(callouts && callouts[ob]) {
    remove_call_out(callouts[ob]);
    map_delete(callouts, ob);
  }
  call_out("do_greeting", 1, ob, from);
}
int attack_by(object thing) {
  tell_room(environment(), "Greg lifts a hand and slaps " + thing->one_short()
            + " sending " + thing->query_objective() + " flying across "
            "the room.\n", thing);
  write("Greg lifts a hand, almost as large as your head, and gives you a "
        "slap that sends you flying across the room.\n");
  write("You bash your head against the wall and the world starts "
        "spinning.\n");
  do_command("'Hey, that's not nice!");
  thing->add_effect("/std/effects/ingested/tranquil_sleep", 120);
  this_object()->stop_fight(thing);
  thing->stop_fight(this_object());
  return 0;
}
void check_room() {
  int room;
  object ob;
  queue = filter_array(queue,
                       (: environment($1) == environment(this_object()) :));
  if(sizeof(queue))
    ob = queue[0];
  if(member_array(ob, queue) == -1)
    return;
  room = member_array(0, in_use);
  if(room == -1) {
    do_command("'Ok " + ob->one_short() + ", unfortunately all the rooms are "
               "busy right now, but "
               "if you don't mind waiting a minute one will become free.");
    return;
  }
  do_command("'Ok " + ob->one_short() + ", you can use room " +
             RNAMES[room] + ".");
  tell_object(ob, "Greg leads you into room " +
              RNAMES[room] + ".\n");
  ob->move_with_look(RPATHS[room], "$N is propelled into the room.",
                     "$N is led out of the room.");
  in_use[room] = ob;
  queue -= ({ ob });
  callouts[ob] = call_out("throw_out", THROW_OUT, ob);
  combat_room = environment();
}
void yes(object ob) {
  if(member_array(ob, offered) == -1 || member_array(ob, queue) != -1)
    return;
  queue += ({ ob });
  check_room();
}
void no(object ob) {
  if(member_array(ob, offered) == -1)
    return;
  offered -= ({ ob });
  if ( environment(ob) == environment(this_object()) ) {
    do_command("'Okay.  Well, come back if you feel like having a go later.");
    do_command("smile " + ob->query_name());
  }
}
void request(object ob) {
  do_command("'Would you like to try out your skills " + ob->one_short() +
             "?");
  if(!sizeof(filter_array(ob->query_holding(), (: $1 && $1->query_weapon()
                                                :))))
    do_command("'You may want to buy a weapon at the shop before trying out "
               "your skills.");
  if(!offered)
    offered = ({ });
  offered += ({ ob });
}
object query_using(int room) {
  return in_use[room];
}
void throw_out(object ob) {
  int room;
  room = member_array(ob, in_use);
  if(room != -1) {
    if(base_name(environment(ob)) == RPATHS[room]) {
      do_command(RNAMES[room]);
      call_out("tell_them", 2, ob, room);
    } else {
      in_use[room] = 0;
    }
  }
}
void tell_them(object ob, int room) {
  if(!ob) {
    do_command("combat");
    return;
  }
  do_command("'Ok " + ob->one_short() + ", time's up.");
  do_command("'Come with me.");
  environment()->stop_them(ob);
  tell_object(ob, "Greg leads you out of the room.\n");
  do_command("combat");
  ob->move_with_look(combat_room, "$N is propelled into the room.",
                     "$N is pushed out of the room.");
}
void do_greeting(object ob) {
  int room;
  if(!ob || !interactive(ob) || member_array(ob, queue) != -1)
    return;
  room = member_array(ob, in_use);
  if(room == -1) {
    do_command("'Hello " + ob->one_short() + ", welcome to the combat "
               "training area.");
    do_command("'Would you like to try out your skills?");
    if(!sizeof(filter_array(ob->query_holding(), (: $1 && $1->query_weapon()
                                                  :))))
      do_command("'You may want to buy a weapon at the shop before trying out "
                 "your skills.");
  } else {
    do_command("'I hope you had a productive time.  Would you like to have "
               "another go?");
    if(room != -1) {
      in_use[room] = 0;
      check_room();
    }
  }
  if(!offered)
    offered = ({ });
  offered += ({ ob });
}

==================================================
FILE: liaison/NEWBIE/guilds_foyer.c
==================================================

#include "path.h"
inherit PATH+"outside";
void setup() {
  set_zone( "Newbie" );
  set_short( "Garden of Guilds" );
  set_light( 100 );
  add_property("no teleport", 1);
  set_day_long( "This is a pleasant garden with trees, shrubs and flowers.  "
                "There are six gazebos in the garden each with a wrought "
                "iron gate with a coat of arms on it.  Each "
                "gazebo is dedicated to one of the Discworld guilds, which "
                "are "+ GUILDS +".  "
                "To look at the gates themselves - use "
                "'look wizard' or 'look witch' or to enter one of the "
                "gazebos, use 'wizard', 'witch' or whichever is appropriate.\n"
                "There is also a sign attached to a post in the centre of the "
                "garden.\n" );
  set_night_long("This is an octagonal garden with a fence around it.  "
                 "Someone has placed braziers around the garden to provide "
                 "light.  There "
                 "are six gazebos in the garden each with a wrought iron gate "
                 "with a coat of arms on it.  Each "
                 "gazebo is dedicated to one of the Discworld guilds, which "
                 "are "+ GUILDS +".  "
                 "To look at the gates themselves - use "
                 "'look wizard' or 'look witch' or to enter one of the "
                 "gazebos, use 'wizard', 'witch' or whichever is "
                 "appropriate.\n"
                 "There is also a sign attached to a post in the centre of "
                 "the garden.\n" );
  add_item("gazebo", "There are a number of gazebos here each dedicated to "
           "a different guild.");
  add_sign("This is a simple white sign attached to a post.\n",
      FOYER->format_sign("Each player will usually join a guild so that "
      "they can learn skills and commands and so advance their abilities.  "
      "Being in a guild also gives character to your character.  To find "
      "out more about the different guilds take each of the guild gates "
      "from this garden.  When you are in Ankh-Morpork you will find that "
      "each guild has a headquarters where you may join.\n\nTake care with "
      "your choice of guild since you will not be able to change it.\n")
      , 0, "sign", "general" );
  add_property("no godmother", 1);
  add_exit( "foyer", PATH + "foyer", "gate" );
#ifndef __DISTRIBUTION_LIB__
  add_exit( "witch", PATH +"witches", "gate" );
  add_exit( "wizard", PATH +"wizards", "gate" );
  add_exit( "thief", PATH +"thieves", "gate" );
  add_exit( "assassin", PATH + "assassins", "gate" );
  add_exit( "warrior", PATH +"fighters", "gate" );
  add_exit( "priest", PATH +"priests", "gate" );
  add_alias( "north", "communication");
  modify_exit("witch",
              ({ "look", "It's too dark to see inside the gazebo."}));
  modify_exit("wizard",
              ({ "look", "It's too dark to see inside the gazebo."}));
  modify_exit("thief",
              ({ "look", "It's too dark to see inside the gazebo."}));
  modify_exit("assassin",
              ({ "look", "It's too dark to see inside the gazebo."}));
  modify_exit("warrior",
              ({ "look", "It's too dark to see inside the gazebo."}));
  modify_exit("priest",
              ({ "look", "It's too dark to see inside the gazebo."}));
  modify_exit("witch", ({ "closed", 1}));
  modify_exit("wizard", ({ "closed", 1}));
  modify_exit("thief", ({ "closed", 1}));
  modify_exit("assassin", ({ "closed", 1}));
  modify_exit("warrior", ({ "closed", 1}));
  modify_exit("priest", ({ "closed", 1}));
  modify_exit( "witch", ({
      "door long", "Over the gate to the Witch room "
      "is the burned-in image of a broomstick with a cat clinging on "
      "to the bristles for dear life.  The gate itself has a little "
      "window in it, but all that you can see through it is darkness.  "
      "To enter here type 'witch'.\n"}) );
  modify_exit( "wizard", ({ "door long", "The gate into the Wizard room "
         "has the crest of Unseen University on it: this shows a large "
         "pointy hat with stars, above it an open book with the words "
         "'Nunc Id Vides, Nunc Ne Vides'. "
         "To enter here type 'wizard'.\n"}) );
  modify_exit( "thief", ({ "door long", "On the Thieves' gate you see "
      "their crest. It has a slashed purse with change falling from a "
        "hole in the bottom and the words ACVTVS ID VERBERAT below. "
          "To enter this gate type \"thief\".\n"}) );
  modify_exit( "assassin", ({ "door long", "On the Assassins' gate you see "
         "their crest.  A cloak and a dagger in the top left and two gold "
           "crosses in the bottom right. Their motto reads: \"Nil Mortifi "
             "Sine Lucre.\"  "
               "To enter this gate type \"assassin\".\n"}) );
  modify_exit( "warrior", ({ "door long", "On the Warriors' gate "
         "they have a strange crest.  A skull and scythe with blood "
         "dripping from it.  Their motto reads: \"If It Moves Kill It. "
         "If It Doesn't Move, Wait For It To Move, Then Kill It.\"  "
         "To enter here type \"warrior\".\n"}) );
  modify_exit( "priest", ({ "door long", "On the Priest's gate you "
         "see an odd crest.  Many unusual symbols, everything from a jar "
         "of fluff to a puddle of water, even an obscure breed of monkey. "
         "To enter here type \"priest\".\n"}) );
#endif
  add_night_item("brazier", "Basically this is a torch on a pole.\n");
  add_room_chats(({"An elderly man dressed in a blue robe and wearing "
                     "a large pointy hat enters from the wizards "
                     "gazebo and leaves south.\n",
                     "An elderly man dressed in a blue robe and wearing "
                     "a large pointy hat enters from the south "
                     "and leaves for the wizards gazebo.\n",
                     "A small woman dressed in a black cloak and wearing "
                     "a large pointy hat enters from the witches "
                     "gazebo and leaves south.\n",
                     "A small woman dressed in a black cloak and wearing "
                     "a large pointy hat enters from the south "
                     "and leaves for the witches gazebo.\n",
                     "A burly man dressed head to toe in armour and "
                     "carrying a large sword enters from the warriors "
                     "gazebo and leaves south.\n",
                     "A burly man dressed head to toe in armour and "
                     "carrying a large sword enters from the north "
                     "and leaves for the warriors gazebo.\n",
                     "A saintly looking woman walks in from the north, "
                     "smiles benevolently at you, and leaves for the "
                     "priests gazebo.\n",
                     "A saintly looking woman enters from the priests "
                     "gazebo, smiles benevolently at you, and leaves "
                     "south.\n",
                     "A shadowy figure enters from the assassins "
                     "gazebo and leaves for the foyer.\n",
                     "A shadowy figure enters from the foyer "
                     "and leaves for the assassins gazebo.\n",
                     "A weaselly, furtive man sneaks in from the foyer "
                     "and leaves for the thieves gazebo.\n",
                     "A weaselly, furtive man sneaks in from the thieves "
                     "gazebo and leaves for the foyer.\n"}));
}
int query_light() {
  int light;
  light = ::query_light();
  if(light < 40)
    light = 40;
  return light;
}

==================================================
FILE: liaison/NEWBIE/help.c
==================================================

#include "path.h"
#include <library.h>
inherit PATH+"inside";
object womble;
void setup() {
  set_zone( "Newbie" );
  set_short( "Help Room" );
  set_light( 75 );
  set_long("This room looks like a library.  There are shelves around the "
           "room crammed with reference books.  Around the room are a "
           "number of signs.\n"
           "The signs are labelled 'helpme', 'newbie', 'problems', "
           "'etiquette' and 'quit'.\n");
  add_item("floor", "The floor is made of polished marble so smooth that "
           "you can see your face in it - yeuch!\n");
  add_item("wall", "The walls are hidden behind row upon row of shelves.\n");
  add_item(({ "shelves", "shelf" }), "The shelves are filled with books.\n");
  add_item("book", "There are many, many reference books here, most are "
           "weighty tomes in black leather bindings.\n");
  add_sign("This is a simple white sign marked 'helpme'.\n",
           FOYER->format_sign(
                 "The Discworld help system is divided into two parts: "
                 "concept help which explains discworld concepts such as "
                 "magic and command help which explains how to use specific "
                 "commands.\n\nPerhaps the single most useful command is "
                 "'help concepts'.  This command will provide a list of "
                 "concepts for which there is an overview.  These overviews "
                 "will help you understand how things work and also what "
                 "commands to use to do things.\n\nTo see the list of "
                 "commands type 'help command_list'.  In addition, the "
                 "'essentials' help file covers all the basic commands "
                 "you're likely to need to get you started."),
           "sign marked 'helpme'",
           "helpme", "general");
   add_sign("This is a simple white sign marked 'problems'.\n",
            FOYER->format_sign(
            "If you have problems getting started or understanding help "
            "files, you can talk to a newbiehelper (type 'helpers' for "
            "a list of online newbiehelpers) or use the newbie channel.  "
            "If you have any problems with the mud not working as you "
            "expect, liaisons are available for giving help and for "
            "answering questions.  They can't provide quest details but "
            "will try to help you if they can.\n\n"
            "To see if any creators are logged on, and to get a list "
            "of all players logged on, use the command 'finger': "
            "Creators are marked by having a C next to their name.  "
            "Senior creators are marked with an S next to their name.  "
            "Directors are marked by having an D next to their name.  "
            "Trustees are marked by having an T next to their name.\n\n"
            "To find out which creators are in the liaison domain "
            "type 'finger liaison', and to see which of those are "
            "currently online, type 'liaisons'.  "
            "To report any bugs or typos that you may encounter, please "
            "make a report out for them. Please read 'help bug' or "
            "'help typo' for information on making reports."),
            "sign marked 'problems'",
            "problems", "general" );
   add_sign("This is a simple white sign marked 'newbie'.\n",
            FOYER->format_sign(
            "This is part of the newbie area on Discworld, "
            "written to help you get acquainted with the game.  "
            "Please enter each room and find out about what "
            "each of Discworld's guilds has to offer.\n\n"
            "If you have any questions that aren't answered by the "
            "signs, first try 'help <subject>' if that doesn't work "
            "use 'newbie <question>' and hopefully someone will "
            "answer your question and 'hnewbie' to view the past couple "
            "of questions.\n\n"
            "Once you have visited each room you may "
            "leave the newbie area to enter Discworld proper.  "
            "Before reaching the Disc, you'll be given the choice of "
            "which city you wish to start in.  Information is given about "
            "each region and city at that time."),
            "sign marked 'newbie'",
            "newbie", "general" );
   add_sign("This is a simple white sign marked 'etiquette'.\n",
            FOYER->format_sign(
            "Discworld is a very friendly mud and there are "
            "few written rules. The bottom line is be nice "
            "and don't cheat.  In particular: \n\n"
            "The use of foul language in shouting and the "
            "broadcasting of quest information are frowned upon.  "
            "Creators will remind you of this if provoked, and "
            "will take appropriate action if necessary. Playing "
            "more than one character at once is not permitted.\n\n"
            "If you wish to play more than one character you must "
            "never have them both logged on at the same time.  "
            "Harassment of other players, sexual or otherwise, "
            "is not acceptable and may lead to banishment."),
            "sign marked 'etiquette'",
            "etiquette", "general" );
   add_sign("This is a simple white sign marked 'quit'.\n",
            FOYER->format_sign(
            "To leave Discworld at any time, "
            "type 'quit' at the prompt.  Your "
            "player file will automatically be "
            "saved with all your equipment.  The only exception is if "
            "you are under 30 minutes old, in which case you won't save."),
            "sign marked 'quit'",
            "quit", "general" );
   add_exit( "foyer", PATH +"foyer", "door");
   add_alias( "southeast", "foyer");
  add_property("no godmother", 1);
}

==================================================
FILE: liaison/NEWBIE/hints.c
==================================================

#include "path.h"
inherit PATH+"inside";
object sign;
void setup() {
  set_zone( "Newbie" );
  set_short("Hints Room" );
  set_light( 75 );
  add_property("no teleport", 1);
  set_long( "You are in a small, dark room.  The only illumination seems to "
            "come from the crack under the door.  The walls are covered "
            "with handwritten notices, most of which you cannot read in this "
            "half-light, however a few catch your eye.  One is entitled "
            "'statistics', another 'navigation', another "
            "'advancement', a fourth 'assistance', yet another 'skills'"
            ", and a final one is marked 'dying'.  Something in the "
            "corner catches your eye.\n");
   add_item( ({ "something", "corner" }),
             "There's something in the corner.  Maybe you could 'search' "
             "the corner and find out what's there." );
  add_item( "floor",
            "You can barely make out the floor.  It appears to be made of "
            "stone");
  add_item( "wall",
            "The walls (what you can see of them under the notices) are made "
            "of grey stone.");
  add_item(({"notice"}), "The walls are covered with handwritten notices.  In "
           "the half-light it's hard to pick them out, but you can make "
           "out a few of them.  One is entitled "
           "'statistics', another 'navigation', another "
           "'advancement', a fourth 'assistance', yet another 'skills'"
           ", and a final one is marked 'dying'.");
  sign=add_sign("A handwritten notice marked 'statistics'.\n",
                FOYER->format_sign(
           "Once you enter Discworld, you can rearrange your stats.  This "
           "should be done to improve your combination of constitution, "
           "dexterity, intelligence, strength and wisdom (your stats) once "
           "you have chosen a guild.  Use the command 'rearrange' to do "
           "this, but consider it well, as you can only rearrange your stats "
           "once.  You can view them using 'score stats'.  See 'help "
           "score'.\n"), 0, "statistics", "general");
  sign->set_short("sign marked 'statistics'");
  sign=add_sign("A handwritten notice marked 'combat'.\n",
                FOYER->format_sign(
           "Combat is a fairly important part of Discworld.  The combat "
           "system is quite advanced.  You should type 'help fighting' "
           "and 'help tactics' to find out more about how to modify "
           "the way in which you fight.\n"),
           0, "combat", "general");
  sign->set_short("sign marked 'combat'");
  sign=add_sign("A handwritten notice marked 'navigation'.\n",
                FOYER->format_sign(
           "Exploring a new area can be quite exciting.  There are lots of "
           "things to look at, and maps to make.  If you get lost, though, "
           "you might appreciate some maps.  In some areas, typing 'map' will "
           "show you a map of your immediate surroundings.  You may also find "
           "the maps some players have made useful - follow the 'Mud Atlas' "
           "link on our homepage.  See 'help maps'.\n"),
           0, "navigation", "general");
  sign->set_short("sign marked 'navigation'");
  sign=add_sign("A handwritten notice marked 'assistance'.\n",
      FOYER->format_sign(
      "Liaison creators are available for giving help and for "
      "answering questions; they cannot provide quest information, "
      "however.  You can find which liaisons are logged on at the moment "
      "using the 'liaisons' command.  "
      "To see if any creators are logged on, and to get a "
      "list of all players logged on, use the command 'finger':\n"
      " - creators are marked by having a C next to their name.\n"
      " - senior creators are marked by having an S next to their name\n"
      " - directors (domain leaders) are marked by having a D next to their "
      "name.\n"
      " - trustees (administrators) are marked by having a T next to their "
      "name.\n\n"
      "To report any bugs or typos that you may encounter, please "
      "make a report out for them.  To do this, please type "
      "'bug' and make out your report.  Please include the error, if "
      "any, that you get, the room that it is occuring in, and what "
      "you were doing to get the error.  Use the 'typo' command and "
      "the same guidelines when you report a typo.\n"), 0, "assistance", "general");
  sign->set_short("sign marked 'assistance'");
  sign=add_sign("A handwritten notice marked 'skills'.\n",
                FOYER->format_sign(
           "To check your skill levels, use the command 'skills', and "
           "to see various statistics about yourself, use 'score'.  Your "
           "stats can also be reviewed using 'score stats'.  The command "
           "'help' will give you a variety of other topics with useful "
           "information."), 0, "skills", "general");
  sign->set_short("sign marked 'skills'");
  sign=add_sign("A handwritten notice marked 'advancement'.\n",
                FOYER->format_sign(
           "Skills can be advanced in a variety of ways on Discworld.  "
           "The guild you join will allow you to advance your skills "
           "for a certain number of experience points and a small fee.  "
           "When you reach the proper skill level your guild will "
           "teach you the commands that you will need to carry out "
           "your guild duties.\n\n"
           "You may also have another player teach you skills if they have "
           "a higher skill level than you, or you may teach yourself.  Both "
           "of these methods cost experience points, and it is generally more "
           "expensive to teach yourself.\n\n"
           "Finally, many of your skills can be advanced simply by performing "
           "tasks that make use of those skills.  For example, your fighting "
           "skills will get better as you participate in more fights.  For "
           "more information on this system, type "
           "'help taskmaster'.\n"),0, "advancement", "general");
  sign->set_short("sign marked 'advancement'");
  sign=add_sign("A handwritten notice marked 'dying'.\n",
                FOYER->format_sign(
           "At some point you will inevitably end up dying on Discworld, but "
           "fear not for you are given 7+1 lives.  When you die you need to "
           "go and visit Harry in the Temple of Small Gods who will raise "
           "you.\n"), 0, "dying", "general");
  sign->set_short("sign marked 'dying'");
  add_property("no godmother", 1);
  add_exit( "foyer", PATH + "foyer", "door" );
  add_alias( "northwest", "foyer");
  room_chat(({10, 40, ({"A voice whispers something that you can't quite "
                         "make out.",
                        "You think you hear someone whispering.",
                        "A voice whispers: Use 'chfn' to change your "+
                         "finger information.",
                        "A voice whispers: 'consider' will tell you how "
                         "tough an opponent is.",
                        "A voice whispers: You can re-execute your last "
                         "command by using '.' or the last command "+
                         "beginning xxx with '.xxx'.",
                        "A voice whispers: You can set up aliases for "
                         "sequences of commands that you use frequently.",
                        "A voice whispers: You can give your friends easier-"
                         "to-type nicknames.",
                        "A voice whispers: Use 'wimpy' to automatically "
                         "run away before you "
                         "die, or 'monitor' to keep a track of how hurt "
                         "you are getting.",
                        "A voice whispers: 'who' will provide a list of "
                         "the current players on Discworld.",
                        "If it's too noisy you can use 'earmuffs' to "
                         "quiet things down a bit.",
                        "A voice whispers: The street urchins can take you "
                         "to various places around Ankh-Morpork.  Just "
                         "say where you want to go and if they know it "
                         "they'll take you there."
                              })}));
}
int do_search()
{
  object ob;
  tell_object( this_player(), "You examine the floor more "
              "closely and find a brooch lying in the corner.\n");
  tell_object(this_player(), "You pick up the brooch.\n");
  say(this_player()->one_short()+" searches the room "
      "and finds something in the corner.\n");
  ob = clone_object( PATH + "womble_brooch" );
  ob->move( this_player() );
  return 1;
}

==================================================
FILE: liaison/NEWBIE/inside.c
==================================================

#include "path.h"
inherit "/std/room/basic_room";
inherit PATH + "common";
void create() {
  do_setup++;
  ::create();
  do_setup--;
  if ( !do_setup ) {
    this_object()->setup();
    this_object()->reset();
  }
}
void init() {
  ::init();
  this_player()->add_command("speak", this_object(), "<string'language'>" );
}
int do_speak(string str) {
  write("Sorry, you cannot do that here.\n");
  return 1;
}

==================================================
FILE: liaison/NEWBIE/newbie_book.c
==================================================

#include "path.h"
#define NEWBIE_SAVE "/d/liaison/NEWBIE/save/"
inherit "/std/book_dir";
void setup() {
  set_name( "book" );
  set_short( "newbie guide book");
  set_main_plural( "newbie guide books" );
  add_adjective( ({"newbie", "guide"}) );
  add_alias( "newbiebook" );
  set_weight( 2 );
  set_value( 0 );
  set_long( "This is a guide book for the newbies who rushed through the "
            "newbie foyer too fast or are just absent-minded in general.  "
            "It contains valuable information on the commands, guilds "
            "and the city of Ankh-Morpork.\n\n"
            "You may 'open book', 'read newbie book', 'turn page of "
            "newbie book' or 'open newbie book to page #'.\n" );
  set_book_language( "general" );
  set_book_dir( NEWBIE_SAVE + "newbie_book_page" );
  set_read_mess("\n"
"                          _______   nn   _______                      \n"
"                          \\____ _\\ [@@] / _____/                       \n"
"                             \\__ _\\/\\/\\/ ___/                        \n"
"                               \\__| [] |__/                            \n"
"                  ___              \\__/              ___             \n"
"                 / ..\\             /__\\             /.. \\          \n"
"               _/ \\___\\            (())            /___/ \\_        \n"
"             _/@  /V /V   _________=||=________    V\\ V\\  @\\_      \n"
"             \\   |_n_n    \\         ||        /     n_n_|   /          \n"
"              |   ____|    |                 |     |____   |           \n"
"              |-----|_____ |       The       | _____|------|           \n"
"             / __    \\ ___)|      NEWBIE     |(___ /     __ \\          \n"
"            | /  \\___ |    |    Guide book   |    | ____/  \\ |         \n"
"            | \\______)|    |      f o r      |    |(_______/ |         \n"
"            |         |    |    Discworld    |    |          |         \n"
"            |        /      \\    Mudders    /      \\         |         \n"
"             \\   _  /        \\_           _/        \\   _   /         \n"
"              | | | |          \\_       _/           | | | |           \n"
"              |_| |_|            \\_____/             |_| |_|           \n"
"       ____________________________________________________________     \n"
"   ___|  Syntaxes: 'open book' 'read book' 'turn a page of book'   |___  \n"
"   \\  |____________        'open book to page #'       ____________|  /  \n"
"   /____/          \\__________________________________/          \\____\\ ",
"general");
}

==================================================
FILE: liaison/NEWBIE/newbie_book_old.c
==================================================

#include "path.h"
#define PAGES    8
inherit "/std/book";
void setup() {
  set_name( "book" );
  set_short( "newbie guide book");
  set_main_plural( "newbie guide books" );
  add_adjective( ( {"newbie", "guide"} ) );
  set_weight( 2 );
  set_value( 0 );
  set_no_pages( PAGES );
  set_long( "This is a guide book for the newbies who rushed through the "
            "newbie foyer too fast or are just absent-minded in general.  "
            "It contains valuable information on the commands, guilds "
            "and the city.  "
            "You may <read newbie book>, <open newbie book to page #> and "
            "<turn a page of newbie book>.\n" );
  set_read_mess("\n"
"                          _______   nn   _______                      \n"
"                          \\____ _\\ [@@] / _____/                       \n"
"                             \\__ _\\/\\/\\/ ___/                        \n"
"                               \\__| [] |__/                            \n"
"                  ___              \\__/              ___             \n"
"                 / ..\\             /__\\             /.. \\          \n"
"               _/ \\___\\            (())            /___/ \\_        \n"
"             _/@  /V /V   _________=||=________    V\\ V\\  @\\_      \n"
"             \\   |_n_n    \\         ||        /     n_n_|   /          \n"
"              |   ____|    |                 |     |____   |           \n"
"              |-----|_____ |       The       | _____|------|           \n"
"             / __    \\ ___)|      NEWBIE     |(___ /     __ \\          \n"
"            | /  \\___ |    |    Guide book   |    | ____/  \\ |         \n"
"            | \\______)|    |      f o r      |    |(_______/ |         \n"
"            |         |    |    Discworld    |    |          |         \n"
"            |        /      \\    Mudders    /      \\         |         \n"
"             \\   _  /        \\_           _/        \\   _   /         \n"
"              | | | |          \\_       _/           | | | |           \n"
"              |_| |_|            \\_____/             |_| |_|           \n"
"       ____________________________________________________________     \n"
"   ___|  Syntaxes: <open book> <read book> <turn a page of book>   |___  \n"
"   \\  |____________        <open book to page #>       ____________|  /  \n"
"   /____/          \\__________________________________/          \\____\\ ",
"general");
  set_open_page( 1 );
  set_read_mess( "                                                \n"
 "                                                                \n"
"                            %^B_RED%^TABLE OF CONTENTS%^RESET%^                        Page 1\n"
 "                    .o0o.o0o.o0o.o0o.o0o.o0o.o0o.o0o.       \n"
 "                                            \n"
 "         General information.....................................2-3\n"
 "         Commands................................................4-5\n"
 "         Guilds..................................................6-7\n"
 "         The lands around Ankh-Morpork.............................8\n"
 "\n\n"
 " %^B_RED%^NOTE:%^RESET%^ If you haven't played MUD's before, we advise you"
 " to read any of\n"
 " the FAQ's around (Frequently Asked Questions).  To read the "
 "Discworld FAQ,\n"
 " type 'help FAQ' or point your http browser at \n"
 " <http:
 " 'Frequently Asked Questions' link.",
 "general", 100 );
  set_open_page( 2 );
  set_read_mess( "\n"
 "                            GENERAL INFORMATION                     Page 2\n"
 "                           -=-=-=-=-=-=-=-=-=-=-                 \n"
 "\n"
 " At any time during the course of playing you can get HELP on various \n"
 " topics by typing  '%^B_RED%^help concepts%^RESET%^' "
 "and  '%^B_RED%^help command_list%^RESET%^'. \n"
 " If you need to ask something else, or have problems of any kind, \n"
 " the LIAISON creators will kindly help you out, if you ask nicely. \n"
 " To see if any are logged on, simply type  '%^B_RED%^liaisons%^RESET%^'.\n"
 " Also, most of the players are usually very helpful when it comes to \n"
 " answering questions.                                \n"
 "\n"
 " As soon as you have made a choice you should join a GUILD where you can \n"
 " advance your skills (take a look at page 5 in this brochure for more \n"
 " information on the different guilds).  But while deciding, you can \n"
 " simply teach yourself.  Type  '%^B_RED%^help level%^RESET%^'  and "
 " '%^B_RED%^help teach%^RESET%^' \n"
 " to find out more.\n"
 "\n"
 " CONTINUES ON NEXT PAGE.",
 "general", 100 );
  set_open_page( 3 );
  set_read_mess( "\n"
 "                        MORE GENERAL INFORMATION                   Page 3\n"
 "                       -=-=-=-=-=-=-=-=-=-=-=-=- \n"
 "\n"
 " In Ankh-Morpork there are GUIDES wandering around that can take you to \n"
 " certain destinations.  These are often waiting by the guilds or in the \n"
 " Mended Drum.  To use one you say in the same room as one, for example: \n"
 " 'take me to wizards guild please'.  \n"
 " Other places they can take you to, besides the guilds, are \n"
 " 'the post office',  'the bank',  'least gate' and  'hubwards gate'.\n"
 "                                                    \n"
 " You start off with a total of eight lives.  If you should happen to die,\n"
 " Harry at the Temple of Small Gods, can RAISE you from the dead and you \n"
 " are then set to go again (one life shorter).  Some player Priests also \n"
 " have the ability to resurrect.\n"
" And please BUG report bugs and typos you see.  Do  '%^B_RED%^help bug%^RESET%^' "
 " and \n"
 " '%^B_RED%^help typo%^RESET%^'  for more information.",
 "general", 100 );
  set_open_page( 4 );
  set_read_mess( " \n"
  "                                  COMMANDS                         Page 4\n"
  "                                -=-=-=-=-=-\n"
  "\n"
  " '%^B_RED%^who%^RESET%^' or '%^B_RED%^finger%^RESET%^'"
  "  Will show the people logged on.  \n"
  "                    You can also 'finger <playername>'\n"
  " '%^B_RED%^rearrange%^RESET%^'        Allows you to set your stats"
  " (You can only do this once).\n"
  " '%^B_RED%^score%^RESET%^'            Will show statistics.\n"
  " '%^B_RED%^score stats%^RESET%^'      More statistics.\n"
  " '%^B_RED%^i%^RESET%^'                Will show you your inventory.\n"
  " '%^B_RED%^skills%^RESET%^'           Will list your skills.\n"
  " '%^B_RED%^wimpy < % >%^RESET%^'      To automatically run away before "
  "you die.\n"
  " '%^B_RED%^monitor on%^RESET%^'       Will help you keep track of Hit"
  " and Guild points.\n"
  " '%^B_RED%^inform logon on/off%^RESET%^'    Gives you info on logon/out-"
  "events (once you've \n                    joined a guild).\n"
  " '%^B_RED%^.%^RESET%^'                Will repeat your last command.\n"
  "\n"
  " CONTINUES ON NEXT PAGE.",
  "general", 100 );
  set_open_page( 5 );
  set_read_mess("\n"
  "                              MORE COMMANDS                        Page 5\n"
  "                             -=-=-=-=-=-=-=-\n"
  "\n"
  " '%^B_RED%^tactics%^RESET%^'         Will show your combat tactics.  Read\n"
  "                  'help tactics' for information on how to use it.\n"
  "\n"
  " Other commands worth checking out, or read the help files for, are: \n"
  " '%^B_RED%^alias%^RESET%^',  '%^B_RED%^earmuff%^RESET%^', "
  " '%^B_RED%^commands%^RESET%^', "
  "'%^B_RED%^nickname%^RESET%^',  '%^B_RED%^consider%^RESET%^'\n"
  " '%^B_RED%^gp%^RESET%^' and  '%^B_RED%^playerkilling%^RESET%^'.",
  "general", 100 );
  set_open_page( 6 );
  set_read_mess( "\n"
 "                               THE GUILDS                           Page 6\n"
 "                             -=-=-=-=-=-=-\n"
 "\n"
 " Each player will usually join a guild so that they can learn skills\n"
 " and commands and so advance their abilities.   Being in a guild also \n"
 " adds character to your character.  These guilds are currently available:\n"
 " WIZARDS GUILD is located west of Sator Square.  To join you have to look\n"
 " around in the Great Hall and find a staircase.\n"
 " THIEVES GUILD is at the beginning of Alchemist street.\n"
 " FIGHTERS GUILD is on Filigree Street, just a stone's throw from Mended \n"
 " Drum.\n"
 " PRIESTS GUILD with its various Gods is located on Small Gods Street.\n"
 " The Gods are: Hat, Pishe, Fish, Sek, Gapp, Gufnork and Sandelfon.\n"
 " For more information, type 'info' in their guild rooms.\n"
 "\n"
 " CONTINUES ON NEXT PAGE.",
 "general", 100 );
 set_open_page( 7 );
 set_read_mess( "\n"
 "                               THE GUILDS                           Page 7\n"
 "                             -=-=-=-=-=-=-\n"
 "\n"
 " ASSASSINS GUILD is located at the eastern end of Filigree Street.  Fill \n"
 " in an application and give it to the secretary in the guild office.\n"
 " WITCHES GUILD is located at Granny Weatherwax' cottage in Lancre. \n"
 " See Gennie Applebottom at Dione Street in Ankh-Morpork if you have \n"
 " trouble finding the place.",
 "general", 100 );
  set_open_page( 8 );
  set_read_mess( "\n"
 "                        THE LANDS OUTSIDE ANKH-MORPORK              Page 8\n"
 "                       -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-                \n"
 "\n"
 " The lands around the city can sometimes be strange and dangerous \n"
 " places.  Through the northeastern (Least) gate is the path that goes \n"
 " through the plains, some small villages, and finally up to the \n"
 " mountains, also known as the Ramtops.\n"
 " The southeastern (Hubwards) gate takes you into the vast forest where \n"
 " innocent people are terrorised by wolves and other strange creatures \n"
 " that roam unfettered.  It's also a more direct route to the Ramtops\n"
 " (Carriages from Ankh-Morpork are a nice alternative to tired feet for \n"
 " travelling to and from the towns in the Sto Plains and Ramtops).\n"
 " Holywood is a great place for newbies venturing out of the city.  You \n"
 " get there via the Brass Bridge.\n"
 " The tour operator at Sator Square is ready to send you to the warm \n"
 " and distant continent of Klatch, if you have enough money.\n"
 " '%^B_RED%^help map%^RESET%^'  will give you a nice map of Discworld and "
 "there are more \n"
 " fantastic and exciting places to come.",
 "general", 100 );
  set_open_page( 0 );
}

==================================================
FILE: liaison/NEWBIE/newbie_brochure.c
==================================================

#include "path.h"
#define PAGES    6
inherit "/std/leaflet";
void setup() {
  set_name( "brochure" );
  set_short( "newbie brochure");
  set_main_plural( "brochures" );
  add_alias ( ( {"brochure", "pamphlet", "newbie brochure"} ) );
  set_weight( 0 );
  set_value( 400 );
  set_no_pages( PAGES );
  set_long( "This is a pamphlet for the newbies who rushed through the "
            "newbie foyer too fast or are just absent-minded in general.  "
            "It contains valuable information on the commands, guilds "
            "and the city.  "
            "You may <read brochure>, and "
            "<turn a page of brochure>.\n" );
  set_open_page( 1 );
  set_read_mess( "                                                \n"
 "                                                                \n"
"                            %^B_RED%^TABLE OF CONTENTS%^RESET%^                        Page 1\n"
 "                    .o0o.o0o.o0o.o0o.o0o.o0o.o0o.o0o.       \n"
 "                                            \n"
 "         General information.....................................2-3\n"
 "         Commands..................................................4\n"
 "         Guilds....................................................5\n"
 "         The lands around Ankh-Morpork.............................6\n"
 "                                                                  "
 "                                                                  "
 "                                                                  "
 "%^B_RED%^ NOTE:%^RESET%^ If you haven't played MUD's before, we advise you"
 " to read any of the \n"
 " FAQ's around (Frequently Asked Questions).  To read the Discworld FAQ,\n"
 " type 'help FAQ' or point your http browser at: \n"
 " http:
 "general", 100 );
  set_open_page( 2 );
  set_read_mess( "                                                        \n"
 "                            GENERAL INFORMATION                     Page 2\n"
 "                           -=-=-=-=-=-=-=-=-=-=-                 \n"
        "                                                \n"
 " At any time during the course of playing you can get HELP on various \n"
 " topics by typing  '%^B_RED%^help concepts%^RESET%^' "
 "and  '%^B_RED%^help command_list%^RESET%^'. \n"
 " If you need to ask something else, or have problems of any kind, \n"
 " the LIAISON people will kindly help you out, if you ask nicely. \n"
 " To see if any are logged on, simply type  '%^B_RED%^liaisons%^RESET%^'.\n"
 " Also, most of the players are usually very helpful when it comes to \n"
 " answering questions.                                \n"
 "                                                                        \n"
 " As soon as you have made a choice you should join a GUILD where you can \n"
 " advance your skills (take a look at page 5 in this brochure for more \n"
 " information on the different guilds).  But while deciding, you can \n"
 " simply teach yourself.  Type  '%^B_RED%^help level%^RESET%^' and "
 " '%^B_RED%^help teach%^RESET%^' \n"
 " to find out more.\n"
 "                                 \n"
 " CONTINUES ON NEXT PAGE.\n",
 "general", 100 );
  set_open_page( 3 );
  set_read_mess( "                                                  \n"
 "                                                                   Page 3\n"
 " In Ankh-Morpork there are GUIDES wandering around that can take you to \n"
 " certain destinations.  These are often waiting by the guilds or in the \n"
 " Mended Drum.  To use one you say in the same room as one, for example: \n"
 " 'take me to wizards guild please'.  \n"
 " Other places they can take you to, besides the guilds, are \n"
 " 'the post office',  'the bank',  'least gate' and  'hubwards gate'.\n"
 "                                                    \n"
 " You start off with a total of eight lives.  If you should happen to die,\n"
 " Harry at the Temple of Small Gods, can RAISE you from the dead and you \n"
 " are then set to go again (one life shorter).  Player Priests also have \n"
 " the ability to resurrect.\n"
" And please BUG report bugs and typos you see.  Do  '%^B_RED%^help bug%^RESET%^' "
 " and \n"
 " '%^B_RED%^help typo%^RESET%^' for more information.\n",
 "general", 100 );
  set_open_page( 4 );
  set_read_mess( "                                                       \n"
 "                                   COMMANDS                        Page 4\n"
 "                                 -=-=-=-=-=-\n"
 "                                                                  \n"
  " '%^B_RED%^who%^RESET%^' or '%^B_RED%^finger%^RESET%^'"
  "  Will show the people logged on.  \n"
  "                    You can also 'finger <playername>'\n"
  " '%^B_RED%^rearrange%^RESET%^'        Allows you to set your stats"
  " (You can only do this once).\n"
  " '%^B_RED%^score%^RESET%^'            Will show statistics.\n"
  " '%^B_RED%^i%^RESET%^'                Will show you your inventory.\n"
  " '%^B_RED%^skills%^RESET%^'           Will list your skills.\n"
  " '%^B_RED%^wimpy < % >%^RESET%^'      To automatically run away before "
  "you die.\n"
  " '%^B_RED%^monitor on%^RESET%^'       Will help you keep track of Hit"
  " and Guild points.\n"
  " '%^B_RED%^inform logon on/off%^RESET%^'    Gives you info on logon/out-"
  "events (once you've \n                    joined a guild).\n"
  " '%^B_RED%^help map%^RESET%^'         Gives you a map of Ankh-Morpork  "
  "(Try also \n"
  "                   'help ankh-morpork'.)\n"
 " '%^B_RED%^.%^RESET%^'                Will repeat your last command.\n"
  " Other commands "
  "worth checking out, or read the help files for, are: \n"
  " '%^B_RED%^alias%^RESET%^',  '%^B_RED%^earmuff%^RESET%^', "
  " '%^B_RED%^commands%^RESET%^', '%^B_RED%^score stats%^RESET%^',  "
  "'%^B_RED%^nickname%^RESET%^',  '%^B_RED%^consider%^RESET%^'\n"
  " '%^B_RED%^gp%^RESET%^' and  '%^B_RED%^playerkilling%^RESET%^'.\n",
  "general", 100 );
  set_open_page( 5 );
  set_read_mess( "                                                   \n"
 "                               THE GUILDS                           Page 5\n"
 "                             -=-=-=-=-=-=-\n"
       "                                                  \n"
 " Each player will usually join a guild so that they can learn skills\n"
 " and commands and so advance their abilities.   Being in a guild also \n"
 " adds character to your character.  These guilds are currently available:\n"
 " WIZARDS GUILD is located west of Sator Square.  To join you have to look\n"
 " around in the Great Hall and find a staircase.\n"
 " THIEVES GUILD is at the beginning of Alchemist street.\n"
 " FIGHTERS GUILD is on Filigree Street, just a stone's throw from Mended \n"
 " Drum.\n"
 " PRIESTS GUILD with its various Gods is located on Small Gods Street.\n"
 " The Gods are: Hat, Pishe, Fish, Sek, Gapp, Gufnork and Sandelfon.\n"
 " For more information, type 'info' in their guild rooms.\n"
 " ASSASSINS GUILD is located at the eastern end of Filigree Street.  Fill \n"
 " in an application and give it to the secretary in the guild office.\n"
 " WITCHES GUILD is located at Granny Weatherwax' cottage in Lancre. \n"
 " See Gennie Applebottom at Dione Street in Ankh-\n"
 " Morpork if you have trouble finding the place.\n",
 "general", 100 );
  set_open_page( 6 );
  set_read_mess( "                                                    \n"
 "                        THE LANDS OUTSIDE ANKH-MORPORK              Page 6\n"
 "                       -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-                \n"
 "                                                           \n"
 " The lands around the city can sometimes be strange and dangerous \n"
 " places.  Through the northeastern (Least) gate is the path that goes \n"
 " through the plains, some small villages, and finally up to the \n"
 " mountains, also known as the Ramtops.\n"
 " The southeastern (Hubwards) gate takes you into the vast forest where \n"
 " innocent people are terrorised by wolves and other strange creatures \n"
 " that roam unfettered.  It's also a more direct route to the Ramtops\n"
 " (Carriages from Ankh-Morpork are a nice alternative to tired feet for \n"
 " travelling to and from the towns in the Sto Plains and Ramtops).\n"
 " The tour operator at Sator Square is ready to send you to the warm \n"
 " and distant continent of Klatch, if you have enough money.\n"
 " There are more fantastic and exciting places to come.\n",
 "general", 100 );
  set_open_page( 1 );
}

==================================================
FILE: liaison/NEWBIE/outside.c
==================================================

#include "path.h"
inherit "/std/outside";
inherit PATH + "common";
void create() {
  do_setup++;
  ::create();
  do_setup--;
  if ( !do_setup ) {
    this_object()->setup();
    this_object()->reset();
  }
}
void init() {
  ::init();
  this_player()->add_command("speak", this_object(), "<string'language'>" );
}
int do_speak(string str) {
  write("Sorry, you cannot do that here.\n");
  return 1;
}

==================================================
FILE: liaison/NEWBIE/priests.c
==================================================

#include "path.h"
inherit PATH + "inside";
string list_deities();
void setup() {
  set_short( "Priests' Gazebo" );
  set_light( 75 );
  add_property("no teleport", 1);
  set_long( "As you enter this blessed and holy gazebo, a warm feeling of "
            "peace and calmness overwhelms you.  You get the feeling that "
            "this must be what it's like to be a priest.  Around the room "
            "you can see items of priesthood: jars of fluff, holy symbols "
            "and coloured rods.  A small sign with a green aura sits in the "
            "corner. If you 'read sign' you can get some information "
            "about the priests.\n"
            "A small notice, blessed into oblivion, states that this is not "
            "the place where you actually join the guild.\n" );
   set_zone( "Newbie" );
   add_item( ({ "jar", "jar of fluff", "jars of fluff", "fluff",
             "holy symbol", "coloured rod", "relic", "symbol", "rod" }),
             "There are many items around the room, but their function is "
             "beyond you for the most part." );
   add_item( "notice",
             "This blessed notice rests peacefully against a holy relic." );
   add_sign( "The sign is covered in a soothing green aura, and sits "
             "in the corner of the room.\n",
             FOYER->format_sign("This holy guild, and its many "
             "gods, is based at the Temple of Small Gods in Ankh-Morpork.  "
             "You may learn how to heal and resurrect, shield with the "
             "power of your faith, and many other holy powers.  Some gods "
             "shun healing almost completely, preferring to concentrate on "
             "causing strife and mayhem among the citizens of Discworld.  Ask"
             " some of the other priests in the city about finding a god "
             "that will suit your needs, and help back you up.\n"
             "The following gods are desirous of priests: " + list_deities() +
             ".  Many gods require particular alignments.  Use 'finger "
             "<deity>' to find out a particular deities alignment "
             "requirements and visit the alignment room to get yours "
             "adjusted if you wish.\n"), 0, 0, "general");
   add_property("no godmother", 1);
   add_exit( "garden", PATH +"guilds_foyer", "gate" );
}
string list_deities() {
  string *deities;
  int i;
  deities = unguarded((: get_dir("/save/deities/") :));
  deities -= ({ ".", ".." });
  for(i=0; i<sizeof(deities); i++) {
    deities[i] = replace(deities[i], ".o", "");
    deities[i] = replace(deities[i], ".gz", "");
  }
  deities = map (filter(deities,
                   (: "/obj/handlers/deity_handler"->query_want_priests($1)
                    :)), (: capitalize ($1) :));
  return query_multiple_short(deities);
}
