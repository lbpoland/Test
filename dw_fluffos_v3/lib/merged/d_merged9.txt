# Total Tokens: 6898
# Total Files Merged: 9
# Total Characters: 23017

WBIE/priests.c
==================================================

#include "path.h"
inherit PATH + "inside";
string list_deities();
void setup() {
  set_short( "Priests' Gazebo" );
  set_light( 75 );
  add_property("no teleport", 1);
  set_long( "As you enter this blessed and holy gazebo, a warm feeling of "
            "peace and calmness overwhelms you.  You get the feeling that "
            "this must be what it's like to be a priest.  Around the room "
            "you can see items of priesthood: jars of fluff, holy symbols "
            "and coloured rods.  A small sign with a green aura sits in the "
            "corner. If you 'read sign' you can get some information "
            "about the priests.\n"
            "A small notice, blessed into oblivion, states that this is not "
            "the place where you actually join the guild.\n" );
   set_zone( "Newbie" );
   add_item( ({ "jar", "jar of fluff", "jars of fluff", "fluff",
             "holy symbol", "coloured rod", "relic", "symbol", "rod" }),
             "There are many items around the room, but their function is "
             "beyond you for the most part." );
   add_item( "notice",
             "This blessed notice rests peacefully against a holy relic." );
   add_sign( "The sign is covered in a soothing green aura, and sits "
             "in the corner of the room.\n",
             FOYER->format_sign("This holy guild, and its many "
             "gods, is based at the Temple of Small Gods in Ankh-Morpork.  "
             "You may learn how to heal and resurrect, shield with the "
             "power of your faith, and many other holy powers.  Some gods "
             "shun healing almost completely, preferring to concentrate on "
             "causing strife and mayhem among the citizens of Discworld.  Ask"
             " some of the other priests in the city about finding a god "
             "that will suit your needs, and help back you up.\n"
             "The following gods are desirous of priests: " + list_deities() +
             ".  Many gods require particular alignments.  Use 'finger "
             "<deity>' to find out a particular deities alignment "
             "requirements and visit the alignment room to get yours "
             "adjusted if you wish.\n"), 0, 0, "general");
   add_property("no godmother", 1);
   add_exit( "garden", PATH +"guilds_foyer", "gate" );
}
string list_deities() {
  string *deities;
  int i;
  deities = unguarded((: get_dir("/save/deities/") :));
  deities -= ({ ".", ".." });
  for(i=0; i<sizeof(deities); i++) {
    deities[i] = replace(deities[i], ".o", "");
    deities[i] = replace(deities[i], ".gz", "");
  }
  deities = map (filter(deities,
                   (: "/obj/handlers/deity_handler"->query_want_priests($1)
                    :)), (: capitalize ($1) :));
  return query_multiple_short(deities);
}

==================================================
FILE: liaison/NEWBIE/shop.c
==================================================

#include "path.h"
inherit "/std/shops/general_shop";
inherit PATH+"common";
void setup() {
  set_zone("Newbie");
  set_light( 75 );
  add_property("no teleport", 1);
  add_property("place", "Newbie Area");
  set_short("Commerce room");
  set_room_size( 5 );
  set_long( "This room is dedicated to trade and commerce.  There is a "
            "shiny counter, behind which is a shopkeeper.\n"
            "Type 'list' to get a list of the "
            "items, 'browse' to examine an item before buying it, "
            "'value' to value your items before you 'sell' them and, "
            "of course, 'buy' to buy an object from the shop.\n"
            "There is a brightly coloured sign here marked 'commerce'.\n");
  add_item( "shiny counter", "That's a display counter for the wares of the "+
            "shop.  Use the command 'list' to get a list of them." );
  add_item( ({ "object", "item", "ware" }), "Use 'list' to get a list of the "+
  "items for sale here." );
  add_item("shopkeeper", "The shopkeeper is a small man apparently in his "
           "mid-thirties.  He seems to be ready to serve you.");
  add_sign("a brightly coloured sign marked 'commerce'.\n",
           "/d/liaison/NEWBIE/foyer"->format_sign(
           "On Discworld different regions use different types of money.  "
           "Type 'help currency' for a list of conversion rates.  Money is "
           "needed to buy equipment, to learn at your guild and for a "
           "variety of other purposes.\n\n"
           "Making money can be difficult.  You can loot the corpses of "
           "your victims of course, but you can also scavenge money using "
           "the 'search' command and make money performing services for your "
           "fellow players.\n\n"
           "Spending money is the fun part.  This shop has instructions "
           "on how to use it.  Take a few minutes to buy yourself some "
           "equipment with the money you were given on login.\n"), 0,
           ({"commerce", "sign"}), "general" )->add_property("determinate","the ");
  add_exit( "foyer", PATH +"foyer", "door" );
  set_store_room( PATH +"store" );
  set_min_amount(1);
  set_max_inventory(200);
}
void init() {
  ::init();
  this_player()->add_command("speak", this_object(), "<string'language'>" );
}
int do_speak(string str) {
  write("Sorry, you cannot do that here.\n");
  return 1;
}

==================================================
FILE: liaison/NEWBIE/store.c
==================================================

#include "path.h"
#include <armoury.h>
inherit "/std/shops/storeroom";
nosave string *weapons = ({"dagger", "knife", "small knife", "short sword",
   "foil", "rapier", "cudgel", "crowbar", "knobbly mace","long sword",
   "chain", "morning star", "axe", "two-handed axe"});
nosave string *armours = ({"hard leather cap", "heavy cotton breeches",
   "ringmail", "leather breeches", "bone helm",
   "brass breastplate", "leather breastplate", "bone mail",
   "bone shield", "medium wooden shield", "small metal shield",
   "hard leather boots", "metal clad boots", "leather gloves",
   "metal gauntlets", "metal helm", "iron breastplate"});
nosave string *clothes = ({"brown linen shirt", "white linen skirt",
   "white linen tunic", "black cotton dress", "white cotton robe",
   "black leather shoes", "soft leather shoes", "grey worsted trousers",
   "fawn cotton trousers", "discreet black trousers", "black wool socks",
   "socks", "black leather shoes", "soft leather shoes", "green cloak",
   "red-brown tunic", "nightshirt", "thermal underwear", "lacy underwear",
   "jester costume", "wide brimmed hat", "soft leather gloves"});
void setup() {
  set_short( "storeroom" );
  add_property( "determinate", "the " );
  set_long( "This is a storeroom.\n" );
  set_light( 100 );
}
void reset() { call_out( "restock", 0 ); }
void restock() {
  int i, size;
  object thing;
  object new_item;
  i = sizeof( match_objects_for_existence( "buckets", this_object() ) );
  for ( ; i < 3; i ++ ) {
    thing = clone_object( "/obj/vessel" );
    if (thing) {
      size = random( 3 );
      thing->set_leak_rate( 0 );
      thing->set_max_volume( 1000 + size * 2000 );
      thing->set_max_weight( 20 + size * 40 );
      thing->set_full_weight( 20 + size * 40 );
      thing->set_stuck( 1 );
      thing->set_name( "bucket" );
      thing->set_short( ({ "small", "medium", "large" })[ size ]
                        +" bucket" );
      thing->set_main_plural( ({ "small", "medium", "large" })[ size ]
                              +" buckets" );
      thing->add_adjective( ({ "small", "medium", "large" })[ size ] );
      thing->set_value( 60 + size * 25 );
      thing->set_long( "This is a metal thing.  It is not very shiny.\n" );
      thing->set_weight( 10 + size * 10 );
      thing->move( this_object() );
    }
  }
  i = sizeof( match_objects_for_existence( "torches", this_object() ) );
  for ( ; i < 6; i++ ) {
    new_item = ( ARMOURY->request_item("torch", 100) );
    if (new_item) new_item->move( this_object() );
  }
  for(i=0; i<30; i++) {
    new_item = ( ARMOURY->request_weapon( weapons[random(sizeof(weapons))],
                   95 ) );
    if (new_item) new_item->move( this_object() );
  }
  for(i=0; i<25; i++) {
    new_item = ( ARMOURY->request_armour( armours[random(sizeof(armours))],
                   95 ) );
    if (new_item) new_item->move( this_object() );
  }
  for(i=0; i<30; i++) {
    new_item = ( ARMOURY->request_clothing( clothes[random(sizeof(clothes))],
                   95 ) );
    if (new_item) new_item->move( this_object() );
  }
}

==================================================
FILE: liaison/NEWBIE/thieves.c
==================================================

#include "path.h"
inherit PATH + "inside";
void setup() {
  set_short( "Thieves' Gazebo" );
  set_light( 75 );
  add_property("no teleport", 1);
  set_long( "You carefully sneak into this small gazebo.  You're not "
            "really sure why, but you don't feel comfortable in here.  You "
            "hope to make it out, without anyone noticing you.  Sneaking a "
            "quick glance around here you see piles of stolen items from the "
            "citizens of Ankh-Morpork.  There is a small sign cowering in "
            "a corner.  If you 'read sign' maybe you'll be able to find "
            "out a bit more about this dangerous profession.\n"
            "A small notice resembling the backside of a receipt states that "
            "this is not actually the place where you join the guild.\n" );
  set_zone( "Newbie" );
  add_item( ({ "item" }), "There "
            "are many items around the room, but their function is beyond "
            "you for the most part." );
  add_item( ({ "notice" }),
            "This small notice looks like the backside of a receipt of some "
            "kind.\n" );
  add_sign( "This poor sign sits huddled in a dark corner of this "
            "foreboding room.\n", "This guild specializes in stealing all "
            "they can from the citizens and player killers of Ankh-Morpork.  They "
            "will teach you the fine art of thieving - how to steal from your "
            "friends and enemies.  Not only is this a dangerous profession, "
            "but it is also a great way to get some pocket change.  Picking "
            "pockets is just one of the things you will get to learn from "
            "this bunch of Authorized Income Redistributors.",
            0, 0, "general");
  add_property("no godmother", 1);
  add_exit( "garden", PATH +"guilds_foyer", "gate" );
}

==================================================
FILE: liaison/NEWBIE/trainer.c
==================================================

#include <weapon.h>
#include <armoury.h>
inherit "/obj/monster";
object *greeters = ({ });
#define GREETINGS ({ \
   "Welcome to Combat Boot Camp, $name$.",\
   "This here course is set up to teach you the basics of fighting.",\
   "You can attack this here dummy and I'll tell ya how well ya done.",\
   "Arr!  You have the look of a fine fighter, $name$." \
})
void setup() {
  set_language( "general" );
  basic_setup( "human", "warrior", 100 );
  set_gender( 1 );
  ARMOURY->request_item("leather jerkin", 30)->move( this_object() );
  ARMOURY->request_item("leather breeches", 30)->move( this_object() );
  ARMOURY->request_item("hard leather boots", 30)->move( this_object() );
  init_equip();
}
void whichone(string name) {
  switch(name) {
  case "xrazzicaz":
    set_name( "xrazzicaz" );
    add_alias( "xraz" );
    add_property( "determinate", "" );
    set_short( "Xrazzicaz" );
    set_long( "This is the former Warriors' Guild dummy.  After being replaced by "
              "the newer mechanical dummy, Xrazzicaz decided to stay on as an "
              "instructor.\n");
    break;
  case "zazzifraz":
  set_name( "zazzifraz" );
  add_alias( "zazz" );
  add_property( "determinate", "" );
  set_short( "Zazzifraz" );
  set_long( "This is Xrazzicaz' brother, a former Warriors' Guild dummy.  After "
            "being replaced by the newer mechanical dummy, Zazzifraz, like "
            "his brother, decided to stay on as an instructor.\n");
  break;
  case "john":
    set_name( "john" );
    add_property( "determinate", "" );
    set_short( "John" );
    set_long( "This is Xrazzicaz' other brother, John.  He was the Warriors' "
              "Guild dummy in Ohulan Cutash until he was replaced by a "
              "mechanical dummy.  Like Xrazzicaz and Zazzifraz he got a "
              "job teaching after retirement.\n");
  }
}
int attack_by(object thing) {
  write(this_object()->the_short() + " glares at you before swiftly knocking "
    "you to the ground.\n");
  this_object()->stop_fight(thing);
  thing->stop_fight(this_object());
  return 0;
}
int attack_ob(object thing) {
  this_object()->stop_fight(thing);
  thing->stop_fight(this_object());
  return 0;
}
void init() {
  if(!this_player()) {
    return;
  }
  if(environment() == find_object("/room/rubbish")) {
    return;
  }
  if(this_player()->query_property("dead")) {
    return;
  }
  if(!this_player()->query_visible(this_object())) {
    return;
  }
  if(!userp(this_player())) {
    return;
  }
  if(this_player()->query_property("player")) {
    greeters += ({this_player()});
    call_out("do_greeting", 1, this_player());
  }
}
void do_greeting() {
  string str;
  if(!sizeof(greeters)) {
    return;
  }
  greeters = filter(greeters,
    (: $1 && environment($1) == environment(this_object()) &&
     $1->query_visible(this_object()) :));
  uniq_array(greeters);
  foreach(str in GREETINGS) {
    str = replace(str, "$name$", query_multiple_short(greeters));
    do_command("'" + str);
  }
  greeters = ({ });
}
void stop_them( object attacker, object dummy ) {
  tell_object( attacker, one_short() +" stops you attacking "+
               (string)dummy->the_short() +".\n" );
  tell_room( environment(), one_short() +" stops "+
             (string)attacker->the_short() +" attacking "+
             (string)dummy->the_short() +".\n", attacker );
  attacker->stop_fight( dummy );
  dummy->stop_all_fight();
}

==================================================
FILE: liaison/NEWBIE/witches.c
==================================================

#include "path.h"
inherit PATH + "inside";
void setup() {
   set_short( "Witches' Gazebo" );
   set_light( 75 );
   add_property("no teleport", 1);
   set_long( "As you wander in through the small gate to this little room, "
             "you are overwhelmed by an array of smells.  Of course, you "
             "can't identify any of these smells nor any of the items that "
             "are strewn about haphazardly.  The only thing you can identify "
             "is a nicely embroidered sign hanging on the wall.  Maybe if you "
             "'read sign' you'll learn a bit about the Witches' Guild.\n"
             "A small notice, which seems to have been used as a teabag, "
             "states that this is not actually the place where you join this "
             "guild.\n" );
   set_zone( "Newbie" );
   add_item( ({ "item" }), "There "
             "are several items of inexplicable function scattered around the "
             "room.  Some of these may be the source of the smells, but you "
             "wisely hesitate to test this possibility." );
   add_item( ({ "notice" }),
             "This small, tea stained notice is casually leaned against a "
             "strange item." );
   add_sign( "The sign is beautifully embroidered and somehow makes the "
             "room brighter and darker at the same time.\n",
             FOYER->format_sign("This guild "
             "is very unusual in that it only accepts those of the "
             "*female* persuasion.  It is "
             "a magical guild, but not the magic of wizards and mages.  "
             "Witch magic is the magic of herbs, cursing, flying around, "
             "and most importantly, headology.\n\n"
             "The prominent witches of the Discworld will be "
             "able to tell you more about headology.  Granny Weatherwax, "
             "whom you must see to join the guild, will be particularly "
             "helpful.  So, if you think you have what it takes to learn "
             "how to know what is real, what is not, and how to tell the "
             "difference, then give the Witches' Guild a go!  Granny, "
             "Nanny Ogg, and Magrat Garlick will be there to greet you.  "
             "Oh, and if you need help getting there, just go see good old "
             "Gennie Applebottom in Ankh-Morpork.  She'll help you out, as "
             "will almost any witch!  "
             "And don't forget, Witches prefer to use the back door "
             "to enter a house.\n"), 0, 0, "general");
   add_property("no godmother", 1);
   add_exit( "garden", PATH +"guilds_foyer", "gate" );
}

==================================================
FILE: liaison/NEWBIE/wizards.c
==================================================

#include "path.h"
inherit PATH + "inside";
void setup() {
   set_short( "Wizards' Gazebo" );
   set_light( 75 );
   add_property("no teleport", 1);
   set_long( "As you enter this gazebo, it is obvious that it is the room "
             "of a mage.  Strewn around are pointy hats, wands and other "
             "items of wizardly paraphernalia.  A small sign catches your "
             "eye.  Maybe if you 'read sign' you'll find something out "
             "about this magical guild.\n"
             "A small notice that, for some reason, is extremely fat, wearing "
             "a pointy hat and winking at you, states that this is not the "
             "place where you actually join the guild.\n" );
   set_zone( "Newbies" );
   add_item( ({ "pointy hat", "wand", "item", "paraphernalia" }),
             "There are many items around the room, but their function is "
             "beyond you for the most part." );
   add_item( "notice",
             "This notice is extremely fat, wears a pointy hat and winks at "
             "you -- that's magic for you." );
   add_sign( "The sign is floating, apparently unsupported, in the "
         "centre of the room.\n", "In this magical guild, based at "
         "Unseen University in Ankh-Morpork, you can learn many "
         "wonderful and exciting spells.  Learn how to tickle an "
         "enemy with a feather, create cabbage pets for your friends "
         "and hold your own against muggers using a carrot "
         "and a torch, or even a human eye!  The Library at the Unseen "
         "University (U.U.) is extensive, with many books in which to "
         "search for that special spell.  You'll learn all this and more "
         "if you decide to follow the Higher Art.", 0, 0, "general" );
   add_property("no godmother", 1);
   add_exit( "garden", PATH +"guilds_foyer", "gate" );
}

==================================================
FILE: liaison/NEWBIE/womble.c
==================================================

#include "path.h"
#include <library.h>
inherit "/obj/monster";
void setup() {
  set_name("womble");
  set_short("womble");
  set_long("This is a small, furry womble.  She is about four feet "
           "tall and looks very cuddly.  She also looks very sad and "
           "is sobbing loudly.\n");
  add_property( "unique", 1 );
  set_gender(2);
  add_plural("wombles");
  set_race("human");
  set_level(100);
  set_language("general");
  add_move_zone("Newbie");
  set_move_after(30, 30);
  set_response_mon_understand_anything(1);
  set_respond_to_with(({
    ({"@comfort", "womble"}),
      "'Thank you, will you find my brooch for me?",
    ({({"@kick", "@punch"}), "womble"}),
      "cry"}));
  add_respond_to_with(({ ({ "hello", "hi", "gday", }),
                     ({ "womble", "all" }) }), ({ "'Hello $hcname$",
                                                    "greet $hname$" }));
  add_respond_to_with(
                           ({ ({"good day", "greetings"}),
         ({ "womble", "all" }) }), ({ "'Hello $hcname$",
                                        "bow deep $hname$" }));
  add_respond_to_with(
   ({ "fuck", ({ "off", "you" }) }), ({ "'Same to you!", "skick $hname$" }));
  add_respond_to_with(({ "fuck" }), "waggle $hname$");
  add_respond_to_with(
                      ({ "@smile", "womble" }), "smile $hname$");
  add_respond_to_with(
     ({ ({ "@skick", "@spunch", "@jump", "@pat", "@slap" }),
          "womble" }), "glare $hname$");
  add_respond_to_with(
                      ({ ({ "@poke", "@glare", "@point" }),
                           "womble" }), "peer sus at $hname$");
  add_respond_to_with(
                      ({ "@grin", "womble" }), "grin $hname$");
  add_respond_to_with(
                ({ ({ "@caress", "@snuggle", "@nestle", "@love", "@throw" }),
                     "womble" }), "waggle $hname$");
  add_respond_to_with(
                      ({ ({ "@kiss", "@french", }),
                           "womble" }), "slap $hname$");
  add_respond_to_with(({ ({ "@bing", "@womble", }),
                           "womble" }), "smile bri $hname$");
  load_chat(50, ({
    1, ":sobs loudly.",
    1, "'Boo Hoo!  I've lost my brooch!",
    1, "@weep",
    1, "'I really loved that brooch.",
    1, "@cry",
    1, "'Oh I wish someone would find it for me.",
    2, "'Please find my brooch for me.",
    2, "'I lost my brooch in one of the rooms while I was reading all "+
       "the wonderful information here."}) );
}
void event_enter(object obj, string mess, object from) {
  if( (obj->query_property("wombles brooch")) &&
      (obj->query_name() == "brooch") &&
      (environment(obj) == this_object()) ) {
    call_out("brooch", 1, ({ this_player() }) );
  }
}
void brooch(mixed arg) {
  object item, tp;
  tp = arg[0];
  if(tp->query_property("womble's brooch")) {
    do_command("'Thank you for returning my brooch again.");
  } else {
    tp->add_property("womble's brooch", 1, 86400);
    tp->adjust_xp(10000);
    do_command("'Wow!  My brooch!");
    do_command("'Thank you very much!");
  }
  do_command("'You may now enter the game by typing \"out\" in the foyer.");
  do_command("'Good Luck!");
  do_command("huggle "+(string)tp->query_short());
  do_command("emote sets the brooch down, and quickly forgets where she left it.");
  foreach(item in all_inventory()) {
    item->dest_me();
  }
}
int attack_by(object thing) {
  write("The womble smacks you round the head with her paw sending you "
  "flying across the room.\n");
  write("You bash your head against the wall and the world starts "
  "spinning.\n");
  do_command("'Hey, that's not nice!\n");
  thing->add_effect("/std/effects/ingested/tranquil_sleep", 120);
  this_object()->stop_fight(thing);
  thing->stop_fight(this_object());
  return 0;
}
int attack_ob(object thing) {
  this_object()->stop_fight(thing);
  thing->stop_fight(this_object());
  return 0;
}

==================================================
FILE: liaison/NEWBIE/womble_brooch.c
==================================================

#include "path.h"
inherit "/obj/armour";
void setup()
{
  set_name("brooch");
  add_adjective( ({ "womble", "brass" }) );
  set_short("womble brooch");
  set_long("A brass brooch with a womble engraved "
    "upon it.\n");
  add_alias("jewellery");
  add_plural("jewellery");
  set_type("badge");
  setup_armour(1000);
  set_percentage(100);
  set_damage_chance(0);
  set_weight(2);
  add_property("wombles brooch", 1);
  add_property( "shop type", "jewellers" );
}
